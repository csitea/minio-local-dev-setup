FROM python:3.8.3-alpine

ARG ORG
ARG APP
ARG ENV
ARG UID
ARG GID
ARG PRODUCT
ARG BASE_DIR
ARG ORG_DIR
ARG PRODUCT_DIR

ENV MODULE="minio-local-dev-setup"
ENV ORG=$ORG
ENV APP=$APP
ENV ENV=$ENV
ENV PRODUCT=$PRODUCT

ENV APPUSR=appusr
ENV APPGRP=appgrp
ENV PS1="`date \"+%F %T\"` \u@\h  \w \n\n  "
ENV BASE_DIR=$BASE_DIR
ENV ORG_DIR=$ORG_DIR
ENV PRODUCT_DIR="/$BASE_DIR/$ORG_DIR/$PRODUCT"
ENV EDITOR="vim"

ENV TERM="xterm-256color"

VOLUME $PRODUCT_DIR

# START ::: install bins
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
    bash binutils vim perl jq wget \
    curl zip unzip busybox-extras \
    su-exec sudo shadow net-tools \
    build-base gcc openssl-dev git \
    libmagic ttf-freefont make jq \
    python3-dev jpeg-dev zlib-dev \
    coreutils libffi-dev util-linux



# Installs latest Chromium (92) package.
RUN apk add --no-cache \
      chromium \
      nss \
      freetype \
      harfbuzz \
      ca-certificates \
      ttf-freefont
# STOP ::: install bins

RUN pip install wheel

# START ::: Enable host to container edit of proj code on ubuntu and mac.
RUN test -z $(getent group $GID | cut -d: -f1) || \
        groupmod -g $((GID+1000)) $(getent group $GID | cut -d: -f1)

RUN set -x ; addgroup -g "$GID" -S "$APPGRP" && \
  adduser \
  --disabled-password \
  -g "$GID" \
  -D \
  -s "/bin/bash" \
  -h "/home/$APPUSR" \
  -u "$UID" \
  -G "$APPGRP" "$APPUSR" && exit 0 ; exit 1

RUN echo "$APPUSR ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN echo "export PS1=\"$PS1\"" >> /home/$APPUSR/.bashrc

USER $APPUSR
ENV USER=$APPUSR
ENV GROUP=$APPGRP
# STOP  ::: enable host to container edit of proj code on ubuntu and mac.

# ::: adding OS APPUSER and APPGROUP
ADD --chown=$APPUSR:$APPGRP "." "$HOME_PRODUCT_DIR"

USER $APPUSR
WORKDIR $PRODUCT_DIR


# install awscli
RUN pip3 install --upgrade pip \
      && pip3 install --no-cache-dir awscli \
      && sudo rm -rf /var/cache/apk/* \
      && sudo apk add aws-cli \
      && aws --version

# install aws-iam-authenticator
RUN echo -e "\n installing the aws-iam-authenticator - this might take even 3 minutes ... \n\n" && \
      mkdir -p /home/$APPUSR/bin/ && curl -o /home/$APPUSR/bin/aws-iam-authenticator \
      'https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator' && \
      sudo chmod +x /home/$APPUSR/bin/aws-iam-authenticator
ENV PATH /home/$APPUSR/bin:${PATH}

# but use the proj root dir to write the code on and interact
WORKDIR $PRODUCT_DIR

CMD exec /bin/bash -c "${HOME_PRODUCT_DIR}/src/bash/run/docker-init-${MODULE}.sh"
